{"version":3,"sources":["Header.jsx","Columns.jsx","App.jsx","index.js"],"names":["Header","total","className","getImageUrl","h","getShortestColumnIdx","cols","heights","i","length","col","images","push","height","indexOf","Math","min","apply","initColumns","columns","getRandomHeights","num","Array","map","max","floor","random","Columns","useState","grid","setGrid","promises","removeImage","e","preventDefault","imageId","parseInt","target","id","column","k","forEach","img","idx","updateGrid","playAgain","index","src","Image","Promise","resolve","onload","all","then","values","useEffect","alt","onClick","type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb9b8843.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header({ total }) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div>\n          <div className=\"toast-header\">\n            <strong className=\"me-auto\">Image Grid</strong>\n            <small>Click on an image to remove it</small>\n          </div>\n          <div className=\"toast-body\">\n            Display images of varying heights in <code>{total}</code> columns, such that the column height balances out\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header","import React, { useState, useEffect } from 'react'\n\nfunction getImageUrl(h) {\n  return `https://dummyimage.com/600x${h}/D3D3D3/111`\n}\n\nfunction updateGrid(grid, imageId, total) {\n  const images = []\n  for (var i = 0; i < grid.length; i++) {\n    const column = grid[i]\n    for (var k = 0; k < column.images.length; k++) {\n      if (column.images[k].id !== imageId) {\n        images.push(column.images[k])\n      }\n    }\n  }\n  const columns = initColumns(total)\n  images.forEach((img) => {\n    const idx = getShortestColumnIdx(columns, img.height)\n    columns[idx].images.push(img)\n    columns[idx].height += parseInt(img.height, 10)\n  })\n  return columns\n}\n\nfunction getShortestColumnIdx(cols) {\n  const heights = []\n  for (var i = 0; i < cols.length; i++) {\n    const col = cols[i]\n    if (col.images.length === 0) {\n      return i\n    }\n    heights.push(col.height)\n  }\n  return heights.indexOf(Math.min.apply(Math, heights));\n}\n\nfunction randomNumber(min, max) { \n  return Math.floor(Math.random() * (max - min) + min)\n}\n\nfunction initColumns(total) {\n  const columns = []\n  for (var i = 0; i < total; i++) {\n    columns[i] = {images: [], height: 0}\n  }\n  return columns\n}\n\nfunction getRandomHeights(num) {\n  return [...Array(num)].map(() => randomNumber(200, 400));\n}\n\nfunction Columns({ total }) {\n  const [grid, setGrid] = useState([])\n  const totalImages = 13\n  const heights = getRandomHeights(totalImages)\n  const promises = []\n  const columns = initColumns(total)\n\n  heights.forEach((h, index) => {\n    const src = getImageUrl(h)\n    const img = new Image()\n\n    promises.push(new Promise((resolve) => {\n      img.onload = () => {\n        resolve({height: img.height, src: src, id: index})\n      }\n    }))\n    img.src = src\n  })\n\n  useEffect(() => {\n    Promise.all(promises).then((values) => {\n      values.forEach((img) => {\n        const idx = getShortestColumnIdx(columns, img.height)\n        columns[idx].images.push(img)\n        columns[idx].height += parseInt(img.height, 10)\n      })\n      setGrid(columns)\n    })\n  }, [])\n\n  function removeImage(e) {\n    e.preventDefault()\n    const imageId = parseInt(e.target.id, 10)\n    setGrid(updateGrid(grid, imageId, total))\n  }\n\n  function playAgain(e) {\n    e.preventDefault()\n    const heights = getRandomHeights(totalImages)\n    const promises = []\n    const columns = initColumns(total)\n\n    heights.forEach((h, index) => {\n      const src = getImageUrl(h)\n      const img = new Image()\n\n      promises.push(new Promise((resolve) => {\n        img.onload = () => {\n          resolve({height: img.height, src: src, id: index})\n        }\n      }))\n      img.src = src\n    })\n\n    Promise.all(promises).then((values) => {\n      values.forEach((img) => {\n        const idx = getShortestColumnIdx(columns, img.height)\n        columns[idx].images.push(img)\n        columns[idx].height += parseInt(img.height, 10)\n      })\n      setGrid(columns)\n    })\n  }\n\n  return <>\n    {grid.map((column, idx) => (\n      <div className=\"col\" key={idx}>\n        {column.images.map((img) => (\n          <img\n            id={img.id}\n            key={img.id}\n            src={img.src}\n            alt={img.src}\n            onClick={removeImage}\n          />\n        ))}\n        {(idx === 0) && (column.images.length === 0) && (\n          <div className=\"play-again\">\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={playAgain}\n            >\n              Play Again\n            </button>\n          </div>\n        )}\n      </div>\n    ))}\n  </>\n}\n\nexport default Columns\n","import React from 'react'\nimport Header from './Header'\nimport Columns from './Columns'\n\n// total number of columns\nconst total = 3\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header total={total} />\n        <Columns total={total} />\n      </div>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}